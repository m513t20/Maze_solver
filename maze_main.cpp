
// maze.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include"maze_solver.h";

void chck_mz();
void chck_nbs();

int main()
{
    chck_nbs();
    chck_mz();

    
}


void chck_nbs() {

    Point x;
    x = Point(0, 0);
    Point* n = x.neighboors();

    for (int i = 0; i < 4; i++) {
        std::cout << *(n) << '\t' << (n)->get_father() << std::endl;
        n++;
    }

}


void chck_mz() {
    Maze_solver m;
    char* name = new char[13] {'D', 'N', 'A', '_', 'M', 'A', 'Z', 'E', '.', 'b', 'm', 'p'};
    char* test = new char[13] {'b', 'o', 'x', '_', 't', 'e', 's', 't', '.', 'b', 'm', 'p'};
    char* color = new char[13] {'c', 'o', 'l', '_', 't', 'e', 's', 't', '.', 'b', 'm', 'p'};
    m = Maze_solver(name);
    m.solve();
    m.save();
    delete[] name, test, color;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
